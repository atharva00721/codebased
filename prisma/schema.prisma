generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

model User {
  id             String          @id @default(cuid())
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  imageUrl       String?
  firstName      String
  lastName       String
  emailAddress   String          @unique
  credits        Int             @default(1500)
  userToProjects UserToProject[]
  Chat           Chat[]
}

model Project {
  id                   String                @id @default(cuid())
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  name                 String
  githubUrl            String
  deleteAt             DateTime?
  commits              Commit[]
  userToProjects       UserToProject[]
  sourceCodeEmbeddings SourceCodeEmbedding[]
  Chat                 Chat[]
}

model UserToProject {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  projectId String
  project   Project  @relation(fields: [projectId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, projectId])
}

model Commit {
  id                 String   @id @default(cuid())
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  projectId          String
  commitMessage      String
  commitHash         String
  commitAuthorName   String
  commitAuthorAvatar String
  commitDate         DateTime
  summary            String
  project            Project  @relation(fields: [projectId], references: [id])
}

model SourceCodeEmbedding {
  id               String                     @id @default(cuid())
  createdAt        DateTime                   @default(now())
  updatedAt        DateTime                   @updatedAt
  summaryEmbedding Unsupported("vector(768)")
  sourceCode       String                     @db.Text
  fileName         String
  summary          String                     @db.Text
  projectId        String
  project          Project                    @relation(fields: [projectId], references: [id])

  @@index([projectId])
}

model Chat {
  id        String        @id @default(cuid())
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  projectId String
  userId    String
  title     String        @default("New Chat")
  messages  ChatMessage[]
  project   Project       @relation(fields: [projectId], references: [id])
  user      User          @relation(fields: [userId], references: [id])

  @@index([projectId])
  @@index([userId])
}

model ChatMessage {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  chatId    String
  role      String // "user", "assistant", "system"
  content   String   @db.Text
  sources   Json? // For storing RAG sources
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)

  @@index([chatId])
}
